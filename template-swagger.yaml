openapi: 3.0.0
info:
  title: customer-account-service
  description: API for registration and user account management
  version: 2019-10-13

paths:
  /api/customer-account/v1/accounts/{accountId}:
    get:
      operationId: GetAccount
      security:
        - access-token-authorizer: []
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
          required: true
          description: The unique accountId for a users account
      responses:
        "200":
          description: "A customer account details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAccount.Arn}/invocations
        httpMethod: POST # WTF!!
        type: aws_proxy
  
  /api/customer-account/v1/accounts:
    post:
      operationId: CreateAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
      responses:
        "202":
          description: "Customer Account Request Received"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateAccount.Arn}/invocations
        httpMethod: POST
        type: aws_proxy 
      
components:
  securitySchemes:
    access-token-authorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: request
        authorizerUri: 
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthorizerFunction.Arn}/invocations
        authorizerResultTtlInSeconds: 0
  schemas:
    Account:
      type: object
      properties:
        accountId:
          type: string
        accountName:
          type: string
        registrationDate:
          type: string
          format: date-time
    CreateAccount:
      type: object
      properties:
        accountName:
          type: string
          required: true
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
